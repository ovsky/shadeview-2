name: Create VSIX, Release, and Artifact (on Main Push - Manual Version)

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true  # Version is *always* required now
      prefix:
        description: 'Custom prefix for the VSIX file name'
        required: true
        default: 'my-extension'

jobs:
  package-release-artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current date
        id: get-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Determine Version
        id: determine-version
        run: |
          # Always use the input version, regardless of the trigger.
          echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT

      - name: Create ZIP archive and Rename
        run: |
          zip -r ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.zip ./* -x "*.git*"
          mv ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.zip ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
        shell: bash

      - name: Upload VSIX as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
          path: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
          retention-days: 5

      - name: Create Tag and Release (Combined)
        run: |
          git tag -a v${{ steps.determine-version.outputs.version }} -m "Release v${{ steps.determine-version.outputs.version }}"
          git push origin v${{ steps.determine-version.outputs.version }}

          gh release create v${{ steps.determine-version.outputs.version }} \
            --title "Release v${{ steps.determine-version.outputs.version }}" \
            --notes "Release of version ${{ steps.determine-version.outputs.version }}.\nVSIX package: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix" \
            --draft=false \
            --prerelease=false \
            ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash