name: Create VSIX, Release, and Artifact (on Main Push)

on:
  push:
    branches:
      - main  # Trigger on pushes to the 'main' branch
  workflow_dispatch: # Keep workflow_dispatch for manual runs
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0) - Only used for manual runs'
        required: false  # Make version optional, as it's not needed for push triggers
      prefix:
        description: 'Custom prefix for the VSIX file name'
        required: true
        default: 'my-extension'

jobs:
  build-release-artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current date
        id: get-date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get version from package.json (or similar)
        id: get-version
        # Adapt this command to your project's structure.  This example is for a Node.js project.
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
        if: github.event_name == 'push'  # Only run on push events

      - name: Determine Version
        id: determine-version
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "version=${{ steps.get-version.outputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Create ZIP archive and Rename
        run: |
          zip -r ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.zip ./*
          mv ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.zip ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix

      - name: Upload VSIX as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
          path: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
          retention-days: 5

      - name: Create Tag
        id: create_tag
        run: |
          git tag -a v${{ steps.determine-version.outputs.version }} -m "Release v${{ steps.determine-version.outputs.version }}"
          git push origin v${{ steps.determine-version.outputs.version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.determine-version.outputs.version }}
          release_name: Release v${{ steps.determine-version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ steps.determine-version.outputs.version }}.
            VSIX package: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix

      - name: Upload VSIX as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
          asset_name: ${{ inputs.prefix }}-${{ steps.get-date.outputs.date }}.vsix
          asset_content_type: application/vsix